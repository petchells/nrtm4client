version: "3"

vars:
  BINARIES: ["nrtm4client", "nrtm4serve"]
  WEB_DIR: "./web"
  WEB_BUILD_DIR: "{{.WEB_DIR}}/dist"
  TERN_BASE_DIR: "./third_party/tern"

tasks:
  migrate:
    cmds:
      - tern migrate --config {{.TERN_BASE_DIR}}/tern.conf --migrations {{.TERN_BASE_DIR}}
    silent: true

  build:
    deps: [buildgo, testgo, buildweb, testweb]
    silent: true

  test:
    deps: [testgo, testweb]
    silent: true

  coverage:
    deps: [test]
    cmds:
      - sh ./scripts/coverage.sh
    silent: true

  clean:
    deps: [cleanbinaries]
    cmds:
      - rm -rf {{.WEB_BUILD_DIR}}
      - rm -rf ./docs/generated
    silent: true

  cleanall:
    deps: [clean]
    cmds:
      - rm -rf {{.WEB_DIR}}/node_modules
    silent: true

  webdev:
    deps: [installweb]
    cmds:
      - cd {{.WEB_DIR}} && npm run dev
    silent: true

  buildgo:
    for:
      var: BINARIES
      split: ","
      as: app
    cmds:
      - cd ./cmd/{{.app}} && go build -o {{.app}} -v
    silent: true

  testgo:
    cmds:
      - go test ./internal/...
    silent: true

  buildweb:
    deps: [installweb]
    cmds:
      - cd {{.WEB_DIR}} && npm run build
    silent: true

  testweb:
    deps: [installweb]
    cmds:
      - cd {{.WEB_DIR}} && npx vitest run
    silent: true

  # Internal targets
  installweb:
    internal: true
    cmds:
      - cd {{.WEB_DIR}} && test ! -d node_modules && npm install
    ignore_error: true
    silent: true

  cleanbinary:
    internal: true
    cmds:
      - cd ./cmd/{{.APP}} && rm -rf {{.APP}} __debug_bin*
    silent: true

  cleanbinaries:
    internal: true
    cmd:
      for:
        var: BINARIES
        as: app
      vars:
        APP: "{{.app}}"
      task: cleanbinary
    silent: true
